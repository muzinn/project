/*40
给定一个数组?candidates?和一个目标数?target?，找出?candidates?中所有可以使数字和为?target?的组合。

candidates?中的每个数字在每个组合中只能使用一次。

说明：

所有数字（包括目标数）都是正整数。
解集不能包含重复的组合。?
示例?1:

输入: candidates =?[10,1,2,7,6,1,5], target =?8,
所求解集为:
[
  [1, 7],
  [1, 2, 5],
  [2, 6],
  [1, 1, 6]

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/combination-sum-ii
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
*/

class Solution {
public:
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
      vector<int >temp;
        vector<vector<int>> result;
        int sum=0;
        set<vector<int>>res_set;
        sort(candidates.begin(),candidates.end());
        gerensubsets(0,candidates,temp,result,target,sum,res_set);
        return result;
    }
    void gerensubsets(int i,vector<int>& nums,vector<int >&temp,vector<vector<int>> &result,int target,int sum,set<vector<int>>&res_set)
    {
        if(i==nums.size()||sum>target)
            return;
        temp.push_back(nums[i]);
        sum+=nums[i];
        if(sum==target&&res_set.find(temp)==res_set.end())
        {
            result.push_back(temp);
            res_set.insert(temp);
        }
        gerensubsets(i+1,nums,temp,result,target,sum,res_set);
        temp.pop_back();
        sum-=nums[i];
        gerensubsets(i+1,nums,temp,result,target,sum,res_set);

    }  
};