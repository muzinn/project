/*35. 搜索插入位置
给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。

你可以假设数组中无重复元素。

示例 1:

输入: [1,3,5,6], 5
输出: 2
示例 2:

输入: [1,3,5,6], 2
输出: 1
示例 3:

输入: [1,3,5,6], 7
输出: 4
示例 4:

输入: [1,3,5,6], 0
输出: 0
二分法
*/

class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
       	int index = -1;
		int begin = 0;
		int end = nums.size();
		while (index == -1)
		{
			int mid = (begin + end) / 2;
			if (target == nums[mid])
			{
				return mid;
			}
			else if (target < nums[mid]) {
				if (mid == 0 || target > nums[mid-1])
				{
					index = mid;
				}
				end = mid - 1; // 更新右端点值
			}
			else if (target > nums[mid]) {
				if ( mid == nums.size()-1 || target < nums[mid + 1])
				{
					index = mid + 1;
				}
				begin = mid + 1; // 更新左端点值
			}
		}
		return index;
    }
};