/*
3. 无重复字符的最长子串
给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。

示例 1:

输入: "abcabcbb"
输出: 3 
解释: 因为无重复字符的最长子串是 "abc"，所以其长度为 3。
示例 2:

输入: "bbbbb"
输出: 1
解释: 因为无重复字符的最长子串是 "b"，所以其长度为 1。
示例 3:

输入: "pwwkew"
输出: 3
解释: 因为无重复字符的最长子串是 "wke"，所以其长度为 3。
     请注意，你的答案必须是 子串 的长度，"pwke" 是一个子序列，不是子串。


*/
class Solution {
public:
    int lengthOfLongestSubstring(string s) {
       char char_map[128]={0};
       int result=0;
       int j=0;
       string word="";
       for(int i=0;i<s.size();i++) 
       {
            char_map[s[i]]++;
			if (char_map[s[i]] == 1)
			{
				word.push_back(s[i]);
				if (result < word.length())
				{
					result = word.length();
				}
			}
			else
			{
				while (j<i && char_map[s[i]] >1)
				{
					char_map[s[j]]--;
					j++;
				}
            }
            word = "";
			for (int k = j; k <= i; k++)
			{
				word += s[k];
			}
		}
		return result;
    }
};