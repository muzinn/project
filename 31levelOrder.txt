
/*
给你一个二叉树，请你返回其按 层序遍历 得到的节点值。 （即逐层地，从左到右访问所有节点）。
*/
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> result;
		queue<TreeNode *> q;
        q.push(root);
		vector<int> item;
        while(!q.empty())
        {
			int currentLevelSize = q.size();
            for (int i = 1; i <= currentLevelSize; ++i) 
			{
                TreeNode * node = q.front(); 
				q.pop();
				if (!node) {
                    continue;
                }
				item.push_back(node->val);
                
                if (node->left) 
					q.push(node->left);
                if (node->right) 
					q.push(node->right);
           }
		    if (item.size() != 0)
				result.push_back(item);		   
        }
		return result;
		

		
    }
};