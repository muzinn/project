/*相交链表
编写一个程序，找到两个单链表相交的起始节点。
*/
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
        ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
		int lenA=getlength(headA);
		int lenB=getlength(headB);
		if(lenA>lenB)
		{
			headA=getsamelengthNode(headA,lenA,lenB);
		}
		if(lenA<lenB)
		{
			headB=getsamelengthNode(headB,lenB,lenA);
		}
		while(headA&&headB)
		{
			if(headA==headB)
			{
				return headA;
			}
			headA=headA->next;
			headB=headB->next;
		}
		return NULL;
		
    }
	int getlength(ListNode *head)
	{
		int len=0;
		while(head)
		{
			head=head->next;
			len++;
		}
		return len;
	}
	ListNode *getsamelengthNode(ListNode *headA2,int long_len,int short_len)
	{
        int detla=long_len-short_len;
		while(headA2&&detla)
		{
			headA2=headA2->next;
			detla--;
		}
		return headA2;	
	}
};